#!/bin/bash
set -e

# Prepare keys
mkdir -p /home/mike/.ssh 
if [ ! -f "/home/mike/.ssh/id_rsa" ]; then
	# Generate fresh rsa key
	ssh-keygen -f /home/mike/.ssh/id_rsa -N '' -t rsa -b 1024
	cp /home/mike/.ssh/id_rsa.pub /home/mike/.ssh/authorized_keys 
	chown -R mike:mike /home/mike && chmod -R 755 /home/mike/.ssh && chmod 600 /home/mike/.ssh/authorized_keys
fi
if [ ! -f "/etc/ssh/ssh_host_rsa_key" ]; then
	# generate fresh rsa key
	ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa
fi
if [ ! -f "/etc/ssh/ssh_host_dsa_key" ]; then
	# generate fresh dsa key
	ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa
fi
# Prepare run dir
if [ ! -d "/var/run/sshd" ]; then
	mkdir -p /var/run/sshd
fi

# unlock root user for ssh user
passwd -u root
passwd -u mike

# start logging for ssh
echo "Starting syslog"
syslogd &

# start sshd
echo "Starting ssshd"
/usr/sbin/sshd -D &

# reread all config
source /etc/profile

# Deploy docker-client-config (docker registry login)
if [ ! -z "${DOCKER_CLIENT_CONFIG_JSON}" ]; then
    echo ${DOCKER_CLIENT_CONFIG_JSON} > /root/.docker/config.json
fi

echo "Starting dind" && \
exec /usr/local/bin/dockerd-entrypoint.sh "$@" &

# Start docker container
until docker info --format "{{.DockerRootDir}}" 2>/dev/null 
do
    sleep 1;
done

docker image load -i /root/java.tar && \
rm /root/java.tar && \
docker run -d \
     -p 31337:33333 \
     --name java_server \
	 -v /home/mike:/mike \
	 -v /root/app.jar:/app.jar \
	 -u www-data \
	 -e HOME=/home/www-data \
	openjdk:11.0.13-jre-slim-buster java -jar /app.jar 33333

# Create flag for user
docker exec -u root java_server sh -c 'mkdir /home/www-data && chown -R www-data:www-data /home/www-data'
docker exec -u www-data java_server sh -c 'echo -n "www_data_was_here" | md5sum | cut -d" " -f1 > /home/www-data/user.txt'

echo "Started"

sleep infinite
